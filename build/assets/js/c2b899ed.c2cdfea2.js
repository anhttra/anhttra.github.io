"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[771],{3578:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var r=n(936),i=n(4848),t=n(8453);const a={slug:"revisiting-the-easy-lb-proxy",title:"Revisiting the easy-lb-proxy",authors:["anhttra"],tags:["haproxy","confd","lb"]},s=void 0,c={authorsImageUrls:[void 0]},l=[{value:"What <code>easy-lb-haproxy</code> is?",id:"what-easy-lb-haproxy-is",level:2},{value:"Why <code>easy-lb-haproxy</code> Need Being Revisited?",id:"why-easy-lb-haproxy-need-being-revisited",level:2},{value:"How to Modify <code>easy-lb-haproxy</code> Docker Image?",id:"how-to-modify-easy-lb-haproxy-docker-image",level:2},{value:"Step 1: Use New Docker Image",id:"step-1-use-new-docker-image",level:3},{value:"Step 2: Rebuild <code>confd</code>",id:"step-2-rebuild-confd",level:3},{value:"Step 3: Rebuild easy-lb-proxy",id:"step-3-rebuild-easy-lb-proxy",level:3},{value:"Conclusion &amp; Future Works",id:"conclusion--future-works",level:2}];function d(e){const o={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.p,{children:(0,i.jsx)(o.img,{alt:"HAProxy Stats Page",src:n(3603).A+"",width:"2000",height:"460"})}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"easy-lb-proxy"})," was a nice open source given by ",(0,i.jsx)(o.a,{href:"https://blog.miguelgrinberg.com/post/about-me",children:"Miguel Grinberg"})," to provide a simple way to deploy ",(0,i.jsx)(o.code,{children:"haproxy"}),", ",(0,i.jsx)(o.code,{children:"confd"})," using Docker. It was also used in the ",(0,i.jsx)(o.code,{children:"micro_flack"})," demo presented by Miguel at PyCon 2017 on May 17th, 2017. However, it is 6 years since last commit was pushed to the ",(0,i.jsx)(o.a,{href:"https://github.com/miguelgrinberg/easy-lb-haproxy",children:"source-code repository"}),". Thus, some modifications are required if we want to apply the source-code with modern hardwares (e.g. ARM architecture) and softwares (latest ",(0,i.jsx)(o.code,{children:"haproxy"})," and confd). This post will discuss how to develop a Docker image installing latest ",(0,i.jsx)(o.code,{children:"haproxy"})," and ",(0,i.jsx)(o.code,{children:"confd"})," versions with ability run with new MacBook (M1/M2 CPUs)."]}),"\n",(0,i.jsxs)(o.h2,{id:"what-easy-lb-haproxy-is",children:["What ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," is?"]}),"\n",(0,i.jsxs)(o.blockquote,{children:["\n",(0,i.jsxs)(o.p,{children:["Accoriding the the ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," README, it is a repository that defines a load balancer container for Docker, based on ",(0,i.jsx)(o.code,{children:"haproxy"}),", ",(0,i.jsx)(o.code,{children:"confd"})," and ",(0,i.jsx)(o.code,{children:"etcd"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"haproxy"})," load balancer will be gracefully reload when its configuration is changes by ",(0,i.jsx)(o.code,{children:"confd"}),", which pulls configuration data from a ",(0,i.jsx)(o.code,{children:"ectd"})," node/cluster."]}),"\n",(0,i.jsxs)(o.p,{children:["In ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," repository, ",(0,i.jsx)(o.code,{children:"haproxy"})," is the version 1.7 (for alpine) while ",(0,i.jsx)(o.code,{children:"confd"})," is binary file for running on ",(0,i.jsx)(o.code,{children:"amd64/alpine"})," environment as shown in the Dockerfile below:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-Dockerfile",children:'FROM haproxy:1.7-alpine\nRUN apk add --update curl && rm -rf /var/cache/apk/*\nRUN mkdir -p /etc/confd/conf.d\nRUN mkdir -p /etc/confd/templates\nCOPY confd .\nRUN chmod +x confd\nCOPY haproxy.toml /etc/confd/conf.d/\nCOPY haproxy.tmpl /etc/confd/templates/\nCOPY boot.sh .\nCOPY watcher.sh .\nEXPOSE 80\nCMD ["./boot.sh"]\n'})}),"\n",(0,i.jsxs)(o.h2,{id:"why-easy-lb-haproxy-need-being-revisited",children:["Why ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," Need Being Revisited?"]}),"\n",(0,i.jsxs)(o.p,{children:["At the time writing this post, when running the image of ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," (miguelgrinberg/easy-lb-haproxy) on Macbook M1, we will got this warning:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"(base) ~ % docker run -d miguelgrinberg/easy-etcd\n\nUnable to find image 'miguelgrinberg/easy-etcd:latest' locally\nlatest: Pulling from miguelgrinberg/easy-etcd\n627beaf3eaaf: Already exists\n9407f1b3f535: Pull complete\nf45e820e1b24: Pull complete\n1da0226fd80a: Pull complete\ne71e952e8745: Pull complete\nda4180eebdd1: Pull complete\nDigest: sha256:b46545c321667c591f78e6f91b4c856c25350cb27e51c5f6304e43a6e9881416\nStatus: Downloaded newer image for miguelgrinberg/easy-etcd:latest\nWARNING: The requested image's platform (linux/amd64) does not match the\ndetected host platform (linux/arm64/v8) and no specific platform was requested\n"})}),"\n",(0,i.jsx)(o.p,{children:"When logging out the docker container, we will see this error:"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:'(base) ~ % docker ps\nCONTAINER ID   IMAGE                            COMMAND\n3241869758a2   miguelgrinberg/easy-lb-haproxy   "/docker-entrypoint.\u2026"\n(base) ~ % docker logs 3241869758a2\nruntime: failed to create new OS thread (have 2 already; errno=22)\nfatal error: runtime.newosproc\n'})}),"\n",(0,i.jsx)(o.p,{children:"This problem can also be faced when running the image on other ARM hardware, e.g. Raspberry Pi. It needs to make some modifications to make it run on these hardwares."}),"\n",(0,i.jsxs)(o.h2,{id:"how-to-modify-easy-lb-haproxy-docker-image",children:["How to Modify ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," Docker Image?"]}),"\n",(0,i.jsxs)(o.p,{children:["In order to modify ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," to run on new hardwares and softwares, we need to: 1. change base Docker Image, 2. rebuild ",(0,i.jsx)(o.code,{children:"confd"})," , and 3. rebuild ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"}),"."]}),"\n",(0,i.jsx)(o.h3,{id:"step-1-use-new-docker-image",children:"Step 1: Use New Docker Image"}),"\n",(0,i.jsxs)(o.p,{children:["Since the original ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," used base image of ",(0,i.jsx)(o.code,{children:"haproxy:1.7-alpine"}),", we will choose to use the newest official haproxy docker images on ",(0,i.jsx)(o.code,{children:"alpine"}),", which is ",(0,i.jsx)(o.code,{children:"haproxy:alpine3.18"})," . We also need another docker image with ",(0,i.jsx)(o.code,{children:"golang"})," installed to build confd, so we choose the official golang image with the same ",(0,i.jsx)(o.code,{children:"alpine3.18"})," , which is ",(0,i.jsx)(o.code,{children:"1.20.10-alpine3.18"}),"."]}),"\n",(0,i.jsxs)(o.h3,{id:"step-2-rebuild-confd",children:["Step 2: Rebuild ",(0,i.jsx)(o.code,{children:"confd"})]}),"\n",(0,i.jsxs)(o.p,{children:["You can follow the instruction at ",(0,i.jsx)(o.a,{href:"https://github.com/kelseyhightower/confd",children:"https://github.com/kelseyhightower/confd"})," for building ",(0,i.jsx)(o.code,{children:"confd"})," from source code. To build it with ",(0,i.jsx)(o.code,{children:"alpine"})," docker, just run:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"(base) ~ % docker run -it golang:1.20.10-alpine3.18 sh\n/go # apk update && apk add git make\n/go # mkdir -p $GOPATH/src/github.com/kelseyhightower\n/go # git clone https://github.com/kelseyhightower/confd.git \\\n$GOPATH/src/github.com/kelseyhightower/confd\n/go # cd $GOPATH/src/github.com/kelseyhightower/confd\n/go/src/github.com/kelseyhightower/confd # make\n/go/src/github.com/kelseyhightower/confd # ls bin\nconfd\n"})}),"\n",(0,i.jsx)(o.h3,{id:"step-3-rebuild-easy-lb-proxy",children:"Step 3: Rebuild easy-lb-proxy"}),"\n",(0,i.jsxs)(o.p,{children:["We will follow the ",(0,i.jsx)(o.a,{href:"https://github.com/anhttra/revisiting-easy-lb-haproxy/blob/master/Dockerfile",children:"Dockerfile"})," in the repo to build our new ",(0,i.jsx)(o.code,{children:"easy-lb-proxy"})," image, except that we will use the base image in the step 1 and the latest ",(0,i.jsx)(o.code,{children:"confd"})," obtained in step 2. The new Dockerfile will be:"]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-Dockerfile",children:'FROM golang:1.20.10-alpine3.18 as build\nRUN apk add --update git make\nRUN mkdir -p $GOPATH/src/github.com/kelseyhightower && \\\n    git clone https://github.com/kelseyhightower/confd.git \\\n    $GOPATH/src/github.com/kelseyhightower/confd && \\\n    cd $GOPATH/src/github.com/kelseyhightower/confd && \\\n    make\n\nFROM haproxy:alpine3.18\nUSER root\nRUN apk update && apk add curl && rm -rf /var/cache/apk/*\nRUN mkdir -p /etc/confd/conf.d\nRUN mkdir -p /etc/confd/templates\nCOPY --from=build /go/src/github.com/kelseyhightower/confd/bin/confd .\nRUN chmod +x confd\nCOPY haproxy.toml /etc/confd/conf.d/\nCOPY haproxy.tmpl /etc/confd/templates/\nCOPY boot.sh .\nCOPY watcher.sh .\nEXPOSE 80\nCMD ["./boot.sh"]\n'})}),"\n",(0,i.jsxs)(o.p,{children:["Then we can run the new Docker image without the error as ",(0,i.jsx)(o.code,{children:"runtime: failed to create new OS thread (have 2 already; errno=22)"}),"."]}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-bash",children:"(base) % docker build -t revisit-easy-lb-haproxy .\n(base) % docker run -it revisit-easy-lb-haproxy\n2023-10-13T13:42:04Z b491152c349a ./confd[9]: INFO Backend set to etcd\n2023-10-13T13:42:04Z b491152c349a ./confd[9]: INFO Starting confd\n"})}),"\n",(0,i.jsx)(o.h2,{id:"conclusion--future-works",children:"Conclusion & Future Works"}),"\n",(0,i.jsxs)(o.p,{children:["In this post, we show how to modify the ",(0,i.jsx)(o.code,{children:"easy-lb-haproxy"})," source code to achieve the new Docker image, which is able to run on new hardware with new softwares. However, the current confd template files (",(0,i.jsx)(o.code,{children:"haproxy.tmpl"})," and ",(0,i.jsx)(o.code,{children:"haproxy.toml"}),") do not work correctly by some reasons (API updates of ",(0,i.jsx)(o.code,{children:"etcd"}),", changes of ",(0,i.jsx)(o.code,{children:"confd"})," template syntax, and changes in the way ",(0,i.jsx)(o.code,{children:"haproxy"})," is reload). We will cover the fix for these issues in the next post."]})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},3603:(e,o,n)=>{n.d(o,{A:()=>r});const r=n.p+"assets/images/banner-e355e7c8fbce4d0598c74d02aa755206.png"},8453:(e,o,n)=>{n.d(o,{R:()=>a,x:()=>s});var r=n(6540);const i={},t=r.createContext(i);function a(e){const o=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:o},e.children)}},936:e=>{e.exports=JSON.parse('{"permalink":"/blog/revisiting-the-easy-lb-proxy","source":"@site/blog/2023-10-12-revisiting-the-easy-lb-proxy/index.md","title":"Revisiting the easy-lb-proxy","description":"HAProxy Stats Page","date":"2023-10-12T00:00:00.000Z","tags":[{"inline":false,"label":"haproxy","permalink":"/blog/tags/haproxy","description":"Haproxy tag description"},{"inline":false,"label":"confd","permalink":"/blog/tags/confd","description":"Confd tag description"},{"inline":false,"label":"LB","permalink":"/blog/tags/lb","description":"LB tag description"}],"readingTime":4.06,"hasTruncateMarker":true,"authors":[{"name":"Anh T. Tra","title":"Full-stack AI Engineer","url":"https://github.com/anhttra","page":{"permalink":"/blog/authors/anhttra"},"socials":{"linkedin":"https://www.linkedin.com/in/anhttra/","github":"https://github.com/anhttra","newsletter":"https://anhttra.tensormaze.com"},"imageURL":"https://avatars.githubusercontent.com/u/44150844?v=4","key":"anhttra"}],"frontMatter":{"slug":"revisiting-the-easy-lb-proxy","title":"Revisiting the easy-lb-proxy","authors":["anhttra"],"tags":["haproxy","confd","lb"]},"unlisted":false,"prevItem":{"title":"Conda + Poetry = All You Need","permalink":"/blog/conda-and-poetry-are-all-you-need"}}')}}]);